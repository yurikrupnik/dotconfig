[build]
target-dir = 'dist/target'
# Optional: use sccache if installed (uncomment to enable)
# rustc-wrapper = "sccache"

# Colors and UX
[term]
color = "auto"

[env]
RUST_LOG = "info"
RUST_ENV = "development"
# DB's - must be set
MONGO_URI = "mongodb://localhost:27017"
REDIS_HOST = "redis://localhost:6379"
DATABASE_URL = "postgres://myuser:mypassword@localhost/mydatabase"
INFLUXDB_URL = "http://localhost:8086"
INFLUXDB_TOKEN = "admintoken123"
INFLUXDB_ORG_ID = "docs"
#SERVICE_DB_URL = "postgres://app_user:dev_only_pwd@localhost/app_db"
#
#SERVICE_PWD_KEY = "CKUGFOD9_2Qf6Pn3ZFRYgPYb8ht4vKqEG9PGMXTB7497bT0367DjoaD6ydFnEVaIRda0kKeBZVCT5Hb62m2sCA"
#
#SERVICE_TOKEN_KEY = "9FoHBmkyxbgu_xFoQK7e0jz3RMNVJWgfvbVn712FBNH9LLaAWS3CS6Zpcg6RveiObvCUb6a2z-uAiLjhLh2igw"
#SERVICE_TOKEN_DURATION_SEC = "1800" # 30 minutes
#
### -- ConfigMap

# This will be relative to Cargo.toml
# In deployed images, probably use absolute path.
SERVICE_WEB_FOLDER = "web-folder/"

# Common cargo aliases for consistency
[alias]
check-all = "check --workspace --all-targets"
clippy-all = "clippy --workspace --all-targets -- -D warnings"
fmt-all = "fmt --all"
b = "build --workspace"
t = "test --workspace --all-targets"
r = "run"
xbuild-gnu = "cross build --release --target aarch64-unknown-linux-gnu"
xbuild-musl = "cross build --release --target aarch64-unknown-linux-musl"
lol = "build"

# WASI runner; adjust to your preferred runtime
[target.wasm32-wasip1]
runner = "wasmtime run --dir ."

# Example local cross-linkers (disabled by default; cross handles these in its containers)
# [target.aarch64-unknown-linux-gnu]
# linker = "aarch64-linux-gnu-gcc"
# [target.aarch64-unknown-linux-musl]
# linker = "aarch64-linux-musl-gcc"
